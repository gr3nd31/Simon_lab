%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Fri Sep 13 10:36:49 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGGCUUAGAGUUUGUAUGAAGCCGAUUUAUAUUACUACAAUUAGCUGAGUAUAUAUUAGGAUGUGAGUCGCGAUUACGGUCCCGGACUUUCAGUCCGGGACCGUAAUCGCGACUCACAUCCUAAUAUAUACUCAGCUAAUUGUAGUAAUAUAAAUCGGCUUCAUACAAACUCUAAGCCUCCA\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[92.50000000 77.50000000]
[92.50000000 62.50000000]
[92.50000000 47.50000000]
[92.50000000 32.50000000]
[92.50000000 17.50000000]
[92.50000000 2.49999952]
[92.50000000 -12.50000000]
[92.50000000 -27.50000000]
[92.50000000 -42.50000000]
[92.50000000 -57.50000000]
[92.50000000 -72.50000000]
[92.50000000 -87.50000000]
[92.50000000 -102.50000000]
[92.50000000 -117.50000000]
[92.50000000 -132.50000000]
[92.50000000 -147.50000000]
[92.50000000 -162.50000000]
[92.50000000 -177.50000000]
[92.50000000 -192.50000000]
[92.50000000 -207.50000000]
[92.50000000 -222.50000000]
[92.50000000 -237.50000000]
[92.50000000 -252.50000000]
[92.50000000 -267.50000000]
[92.50000000 -282.50000000]
[92.50000000 -297.50000000]
[92.50000000 -312.50000000]
[92.50000000 -327.50000000]
[92.50000000 -342.50000000]
[92.50000000 -357.50000000]
[92.50000000 -372.50000000]
[92.50000000 -387.50000000]
[92.50000000 -402.50000000]
[92.50000000 -417.50000000]
[92.50000000 -432.50000000]
[92.50000000 -447.50000000]
[92.50000000 -462.50000000]
[92.50000000 -477.50000000]
[92.50000000 -492.50000000]
[92.50000000 -507.50000000]
[92.50000000 -522.50000000]
[92.50000000 -537.50000000]
[92.50000000 -552.50000000]
[92.50000000 -567.50000000]
[92.50000000 -582.50000000]
[92.50000000 -597.50000000]
[92.50000000 -612.50000000]
[92.50000000 -627.50000000]
[92.50000000 -642.50000000]
[92.50000000 -657.50000000]
[92.50000000 -672.50000000]
[92.50000000 -687.50000000]
[92.50000000 -702.50000000]
[92.50000000 -717.50000000]
[92.50000000 -732.50000000]
[92.50000000 -747.50000000]
[92.50000000 -762.50000000]
[92.50000000 -777.50000000]
[92.50000000 -792.50000000]
[92.50000000 -807.50000000]
[92.50000000 -822.50000000]
[92.50000000 -837.50000000]
[92.50000000 -852.50000000]
[92.50000000 -867.50000000]
[92.50000000 -882.50000000]
[92.50000000 -897.50000000]
[92.50000000 -912.50000000]
[92.50000000 -927.50000000]
[92.50000000 -942.50000000]
[92.50000000 -957.50000000]
[92.50000000 -972.50000000]
[92.50000000 -987.50000000]
[92.50000000 -1002.50000000]
[92.50000000 -1017.50000000]
[92.50000000 -1032.50000000]
[92.50000000 -1047.50000000]
[92.50000000 -1062.50000000]
[92.50000000 -1077.50000000]
[92.50000000 -1092.50000000]
[92.50000000 -1107.50000000]
[92.50000000 -1122.50000000]
[92.50000000 -1137.50000000]
[92.50000000 -1152.50000000]
[92.50000000 -1167.50000000]
[92.50000000 -1182.50000000]
[92.50000000 -1197.50000000]
[92.50000000 -1212.50000000]
[92.50000000 -1227.50000000]
[92.50000000 -1242.50000000]
[92.50000000 -1257.50000000]
[86.45365906 -1273.33911133]
[100.00000000 -1283.53393555]
[113.54634094 -1273.33911133]
[107.50000000 -1257.50000000]
[107.50000000 -1242.50000000]
[107.50000000 -1227.50000000]
[107.50000000 -1212.50000000]
[107.50000000 -1197.50000000]
[107.50000000 -1182.50000000]
[107.50000000 -1167.50000000]
[107.50000000 -1152.50000000]
[107.50000000 -1137.50000000]
[107.50000000 -1122.50000000]
[107.50000000 -1107.50000000]
[107.50000000 -1092.50000000]
[107.50000000 -1077.50000000]
[107.50000000 -1062.50000000]
[107.50000000 -1047.50000000]
[107.50000000 -1032.50000000]
[107.50000000 -1017.50000000]
[107.50000000 -1002.50000000]
[107.50000000 -987.50000000]
[107.50000000 -972.50000000]
[107.50000000 -957.50000000]
[107.50000000 -942.50000000]
[107.50000000 -927.50000000]
[107.50000000 -912.50000000]
[107.50000000 -897.50000000]
[107.50000000 -882.50000000]
[107.50000000 -867.50000000]
[107.50000000 -852.50000000]
[107.50000000 -837.50000000]
[107.50000000 -822.50000000]
[107.50000000 -807.50000000]
[107.50000000 -792.50000000]
[107.50000000 -777.50000000]
[107.50000000 -762.50000000]
[107.50000000 -747.50000000]
[107.50000000 -732.50000000]
[107.50000000 -717.50000000]
[107.50000000 -702.50000000]
[107.50000000 -687.50000000]
[107.50000000 -672.50000000]
[107.50000000 -657.50000000]
[107.50000000 -642.50000000]
[107.50000000 -627.50000000]
[107.50000000 -612.50000000]
[107.50000000 -597.50000000]
[107.50000000 -582.50000000]
[107.50000000 -567.50000000]
[107.50000000 -552.50000000]
[107.50000000 -537.50000000]
[107.50000000 -522.50000000]
[107.50000000 -507.50000000]
[107.50000000 -492.50000000]
[107.50000000 -477.50000000]
[107.50000000 -462.50000000]
[107.50000000 -447.50000000]
[107.50000000 -432.50000000]
[107.50000000 -417.50000000]
[107.50000000 -402.50000000]
[107.50000000 -387.50000000]
[107.50000000 -372.50000000]
[107.50000000 -357.50000000]
[107.50000000 -342.50000000]
[107.50000000 -327.50000000]
[107.50000000 -312.50000000]
[107.50000000 -297.50000000]
[107.50000000 -282.50000000]
[107.50000000 -267.50000000]
[107.50000000 -252.50000000]
[107.50000000 -237.50000000]
[107.50000000 -222.50000000]
[107.50000000 -207.50000000]
[107.50000000 -192.50000000]
[107.50000000 -177.50000000]
[107.50000000 -162.50000000]
[107.50000000 -147.50000000]
[107.50000000 -132.50000000]
[107.50000000 -117.50000000]
[107.50000000 -102.50000000]
[107.50000000 -87.50000000]
[107.50000000 -72.50000000]
[107.50000000 -57.50000000]
[107.50000000 -42.50000000]
[107.50000000 -27.50000000]
[107.50000000 -12.50000000]
[107.50000000 2.49999952]
[107.50000000 17.50000000]
[107.50000000 32.50000000]
[107.50000000 47.50000000]
[107.50000000 62.50000000]
[107.50000000 77.50000000]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 185]
[2 184]
[3 183]
[4 182]
[5 181]
[6 180]
[7 179]
[8 178]
[9 177]
[10 176]
[11 175]
[12 174]
[13 173]
[14 172]
[15 171]
[16 170]
[17 169]
[18 168]
[19 167]
[20 166]
[21 165]
[22 164]
[23 163]
[24 162]
[25 161]
[26 160]
[27 159]
[28 158]
[29 157]
[30 156]
[31 155]
[32 154]
[33 153]
[34 152]
[35 151]
[36 150]
[37 149]
[38 148]
[39 147]
[40 146]
[41 145]
[42 144]
[43 143]
[44 142]
[45 141]
[46 140]
[47 139]
[48 138]
[49 137]
[50 136]
[51 135]
[52 134]
[53 133]
[54 132]
[55 131]
[56 130]
[57 129]
[58 128]
[59 127]
[60 126]
[61 125]
[62 124]
[63 123]
[64 122]
[65 121]
[66 120]
[67 119]
[68 118]
[69 117]
[70 116]
[71 115]
[72 114]
[73 113]
[74 112]
[75 111]
[76 110]
[77 109]
[78 108]
[79 107]
[80 106]
[81 105]
[82 104]
[83 103]
[84 102]
[85 101]
[86 100]
[87 99]
[88 98]
[89 97]
[90 96]
[91 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
