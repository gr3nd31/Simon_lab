# Iterates through target parameter relaxation until hits are found
while (nrow(interim) < 1 & enough == FALSE){
maxer <- maxer+shifter
miner <- miner-shifter
interim <- df[df$APE < target_ape*maxer & df$APE > target_ape*miner &
df$pe_slope < target_PEslope*maxer & df$pe_slope > target_PEslope*miner &
df$GC < target_GC*maxer & df$GC > target_GC*miner &
df$Bulge == bulge &
df$BulgeSize < bulge_size*maxer & df$BulgeSize > bulge_size*miner &
df$Complementarity < complementarity*maxer & df$Complementarity > complementarity*miner,]
# Confirms there are enough target sequences
if (nrow(interim) > 0){
if_enough <- readline(prompt = paste0("Found ", nrow(interim), " sequences with parameters within ", (maxer-1)*100,"% of targets. Is this enough (Y/n)?"))
if (if_enough != "n"){
print("ending")
enough <- TRUE
}
} else if (maxer >= cutoff){
cat("Relaxation of parameters has surpassed cutoff threshold. Aborting search.\n")
break
}
}
if (enough | nrow(interim) > 0){
cat(paste0("Found ", nrow(interim), " sequences within ", (maxer-1)*100, "% of the target parameters.\n"))
write_csv(interim, out_file)
} else {
cat("Unable to find matching sequences. Run more iterations and try again.\n")
print(maxer)
}
}
}
find_a_hairpin(datum)
find_a_hairpin(datum)
find_a_hairpin <- function(df = datum,
shifter = 0.1,
target_ape = 0.2,
target_dGslope = -0.41,
target_PEslope = 0.1,
target_GC = 0.5,
bulge = "None",
bulge_size = 0.1,
bulge_position = 0.5,
complementarity = 100,
target_structure = "",
cutoff = 3,
out_file = "targets.csv"){
print("Starting search")
maxer <- 1
miner <- 1
if (!"pe_slope" %in% names(df)){
cat("Running PE slope calculations...\n")
df <- pe_slope(df)
}
if (target_structure != ""){
df <- df[df$Structure == target_structure,]
}
if (nrow(df) < 1){
cat("No sequences with given structure. Aborting search.\n")
} else {
cat("Running initial search...\n")
interim <- df[df$APE == target_ape &
df$pe_slope == target_PEslope &
df$GC == target_GC &
df$Bulge == bulge &
df$BulgeSize == bulge_size &
df$Complementarity == complementarity,]
if (nrow(interim) < 1){
cat("Initial run did not find a sequence. Relaxing search parameters...")
enough <- FALSE
} else {
if_enough <- readline(prompt = paste0("Found ", nrow(interim), " sequences with desired targets. Is this enough (Y/n)?"))
if (if_enough != "n"){
enough <- TRUE
} else{
enough <- FALSE
}
}
# Iterates through target parameter relaxation until hits are found
while (nrow(interim) < 1 | enough == FALSE){
maxer <- maxer+shifter
miner <- miner-shifter
interim <- df[df$APE < target_ape*maxer & df$APE > target_ape*miner &
df$pe_slope < target_PEslope*maxer & df$pe_slope > target_PEslope*miner &
df$GC < target_GC*maxer & df$GC > target_GC*miner &
df$Bulge == bulge &
df$BulgeSize < bulge_size*maxer & df$BulgeSize > bulge_size*miner &
df$Complementarity < complementarity*maxer & df$Complementarity > complementarity*miner,]
# Confirms there are enough target sequences
if (nrow(interim) > 0){
if_enough <- readline(prompt = paste0("Found ", nrow(interim), " sequences with parameters within ", (maxer-1)*100,"% of targets. Is this enough (Y/n)?"))
if (if_enough != "n"){
enough <- TRUE
}
} else if (maxer >= cutoff){
cat("Relaxation of parameters has surpassed cutoff threshold. Aborting search.\n")
break
}
}
if (enough | nrow(interim) > 0){
cat(paste0("Found ", nrow(interim), " sequences within ", (maxer-1)*100, "% of the target parameters.\n"))
write_csv(interim, out_file)
} else {
cat("Unable to find matching sequences. Run more iterations and try again.\n")
print(maxer)
}
}
}
find_a_hairpin(datum)
datum <- read_csv("targets.csv")
ggplot(data = datum, aes(x = dG_length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
theme_bw()
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
theme_bw()
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
lims(x = c(-1,0))+
theme_bw()
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
lims(x = c(-1.2,0))+
theme_bw()
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
datum <- read_csv("Downloads/HP_1_permutations_sorted_top100.csv")
the_file <- ""
seq_num <- 1
for (i in unique(datum$sequence)){
the_file<- paste0(the_file, ">Sequence_", seq_num,"\n",i,"\n")
seq_num=seq_num+1
}
cat(the_file, file = "BD.fasta")
datum <- read_csv("Documents/Github/Simon_lab/hairpin_analysis/data.csv")
datum <- pe_slope(datum)
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
datum <- read_csv("Documents/Github/Simon_lab/hairpin_analysis/data.csv")
the_file <- ""
View(datum)
the_file <- ""
for (i in unique(datum$Name)){
the_file<- paste0(the_file, ">", i,"\n",datum[datum$Name,]$Structure, "\n")
}
the_file <- ""
for (i in unique(datum$Name)){
the_file<- paste0(the_file, ">", i,"\n",datum[datum$Name == i,]$Structure, "\n")
}
datum <- read_csv("Downloads/HP_1_permutations_sorted_top100.csv")
the_file <- ""
seq_num <- 1
for (i in unique(datum$sequence)){
the_file<- paste0(the_file, ">Sequence_", seq_num,"\n",i,"\n")
seq_num=seq_num+1
}
cat(the_file, file = "BD.fasta")
datum <- read_csv("Documents/Github/Simon_lab/hairpin_analysis/data.csv")
the_file <- ""
for (i in unique(datum$Name)){
the_file<- paste0(the_file, ">", i,"\n",datum[datum$Name == i,]$Structure, "\n")
}
cat(the_file, file = "Documents/Github/Simon_lab/strucs.fasta")
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
datum <- read_csv("Documents/Github/Simon_lab/hairpin_analysis/data.csv")
datum <- pe_slope(datum)
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
datum$close <- "N"
head(datum)
datum[datum$Name == ">Sequence_6" | datum$Name == ">CY1" |
datum$Name == ">Sequence_23" | datum$Name == ">Sequence_27" |
datum$Name == ">Sequence_33",]$close <- "Y"
ggsave("graph.png", dpi = 300)
ggplot(data = datum, aes(x = dG_Length, y = APE, color = close))+
geom_point(size = 5)+
#scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
View(datum)
datum[datum$Name == ">Sequence_6" | datum$Name == ">CY1_WT" |
datum$Name == ">Sequence_23" | datum$Name == ">Sequence_27" |
datum$Name == ">Sequence_33",]$close <- "Y"
ggsave("graph.png", dpi = 300)
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
datum$close <- "N"
datum[datum$Name == ">Sequence_6" | datum$Name == ">CY1_WT" |
datum$Name == ">Sequence_23" | datum$Name == ">Sequence_27" |
datum$Name == ">Sequence_33",]$close <- "Y"
ggsave("graph.png", dpi = 300)
ggplot(data = datum, aes(x = dG_Length, y = APE, color = close))+
geom_point(size = 5)+
#scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
datum[datum$Name == ">Sequence_6" | datum$Name == ">CY_WT" |
datum$Name == ">Sequence_23" | datum$Name == ">Sequence_27" |
datum$Name == ">Sequence_33",]$close <- "Y"
ggplot(data = datum, aes(x = dG_Length, y = APE, color = close))+
geom_point(size = 5)+
#scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
ggsave("closest.png", dpi = 300)
q()
library(ggpubr)
library(tidyverse)
datum <- read_csv("Documents/smithy/cy1_hp/data.csv")
datum[datum$Name== "CY_WT",]
unique(datum$Name)
datum[datum$Name== "CY1",]
datum[datum$Name== ">CY1",]
mean(datum[datum$Name != ">CY1",]$GC)
median(datum[datum$Name != ">CY1",]$GC)
median(datum[datum$Name != ">CY1",]$BP)
median(datum[datum$Name != ">CY1",]$bp)
mean(datum[datum$Name != ">CY1",]$bp)
sd(datum[datum$Name != ">CY1",]$bp)
datum[datum$Name != ">Sequence_6",]$bp
datum[datum$Name == ">Sequence_6",]$bp
datum[datum$Name == ">Sequence_23",]$bp
datum[datum$Name == ">Sequence_33",]$bp
datum[datum$Name == ">Sequence_27",]$bp
q()
library(tidyverse)
x <- "CTCGATGCTTCCAGGTTCGATCTGCATGTCAGCGTTGGAATGCTTAAGTTCACTCATAA"
str_replace_all(x, "T", "U")
x <- "CTCGATGCGTCCAGGTTCGATCTGCATGTCAGCGTTGGAATGCTTAAGTTCACTCATAA"
str_replace_all(x, "T", "U")
x <- "CATTTGCGGCGCAAAGTAGCTCCTGACTCTAATGCATTTAGGCCTTTTGCTATACACGGT"
str_replace_all(x, "T", "U")
x <- "CAGTAAGAGGTTGTATGGCGAGGGGGCCGAACCGTGTATAGCAAAAGGCCTAAATGCATT"
str_replace_all(x, "T", "U")
x <- "AGAGTCAGGAGCTACTTTGCGCCGCAAATGGGAGAAGTTTTCATCCCCAGTGTGCGTTTC"
str_replace_all(x, "T", "U")
q()
q()
library(ggpubr)
library(tidyverse)
datum <- read_csv("Documents/smithy/tbsv/data.csv")
View(datum)
datum$Structure
for (i in unique(datum$Length)){
for (j in unique(datum[datum$Length == i,]$Structure)){
print(j)
}
}
j
substr(j, 3, 3)
for (i in unique(datum$Length)){
for (j in unique(datum[datum$Length == i,]$Structure)){
for (k in c(1:nchar(j))){
interim <- tibble("Length" = i,
"ID" = j,
"Position" = k,
"Seq" = substr(datum[datum$Length == i & datum$Structure == j,]$Sequence,k, k),
"Structure" = substr(datum[datum$Length == i & datum$Structure == j,]$Structure,k, k))
if (!exists("all_data")){
all_data <- interim
} else {
all_data <- rbind(all_data, interim)
}
}
}
}
View(interim)
rm(all_data)
datum <- read_csv("Documents/smithy/tbsv/data.csv")
for (i in unique(datum$Length)){
for (j in unique(datum[datum$Length == i,]$Structure)){
print(j)
for (k in c(1:nchar(j))){
interim <- tibble("Length" = i,
"ID" = j,
"Position" = k,
"Seq" = substr(datum[datum$Length == i & datum$Structure == j,]$Sequence,k, k),
"Structure" = substr(datum[datum$Length == i & datum$Structure == j,]$Structure,k, k))
if (!exists("all_data")){
all_data <- interim
} else {
all_data <- rbind(all_data, interim)
}
}
}
}
View(all_data)
table(all_data$Length)
q()
install.packages(c("broom", "car", "glue"))
exit
q()
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(ggpubr))
datum <-read_csv("Documents/smithy/FAH/hairpin_analysis/data.csv")
datum$APE
m = lm(dG~APE, data = datum)[[1]][2]
b = lm(dG~APE, data = datum)[[1]][1]
draft <- ggplot(data = datum, aes(x = Length, y = APE))+
geom_point(size = 5, alpha = 0.7)+
theme_bw()+
geom_smooth(method = "lm", linewidth = 2, alpha = 0.5, linetype = 2)+
scale_x_continuous(position = "top")+
labs(x = "Length (nt)",
y = "Minimum Free Energy",
title = paste0("y = ", round(m, 2), "x + ", round(b,2)))+
theme(line = element_line(linewidth = 1),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.line = element_line(linewidth = 1),
title = element_text(size = 20))
darft
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE))+
geom_point(size = 5, alpha = 0.7)+
theme_bw()+
geom_smooth(method = "lm", linewidth = 2, alpha = 0.5, linetype = 2)+
scale_x_continuous(position = "top")+
labs(x = "Length (nt)",
y = "Average Positional Entropy",
title = paste0("y = ", round(m, 2), "x + ", round(b,2)))+
theme(line = element_line(linewidth = 1),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.line = element_line(linewidth = 1),
title = element_text(size = 20))
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = log(APE)))+
geom_point(size = 5, alpha = 0.7)+
theme_bw()+
geom_smooth(method = "lm", linewidth = 2, alpha = 0.5, linetype = 2)+
scale_x_continuous(position = "top")+
labs(x = "Length (nt)",
y = "Average Positional Entropy",
title = paste0("y = ", round(m, 2), "x + ", round(b,2)))+
theme(line = element_line(linewidth = 1),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.line = element_line(linewidth = 1),
title = element_text(size = 20))
ggsave(paste0(the_name,"Length_by_APE.png"), dpi = 300, plot = draft, width = 6, height = 6)
draft
m = lm(dG~log(APE), data = datum)[[1]][2]
b = lm(dG~log(APE), data = datum)[[1]][1]
draft <- ggplot(data = datum, aes(x = dG_Length, y = log(APE)))+
geom_point(size = 5, alpha = 0.7)+
theme_bw()+
geom_smooth(method = "lm", linewidth = 2, alpha = 0.5, linetype = 2)+
scale_x_continuous(position = "top")+
labs(x = "MFE/Length",
y = "Average Positional Entropy (log10)",
title = paste0("y = ", round(m, 2), "x + ", round(b,2)))+
theme(line = element_line(linewidth = 1),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.line = element_line(linewidth = 1),
title = element_text(size = 20))
draft
m = lm(dG~log(APE), data = datum)[[1]][2]
b = lm(dG~log(APE), data = datum)[[1]][1]
draft <- ggplot(data = datum, aes(x = dG_Length, y = log(APE)))+
geom_point(size = 5, alpha = 0.7)+
theme_bw()+
geom_smooth(method = "lm", linewidth = 2, alpha = 0.5, linetype = 2)+
scale_x_continuous(position = "top")+
labs(x = "MFE/Length",
y = "Average Positional Entropy (log10)",
title = paste0("y = ", round(m, 2), "x + ", round(b,2)))+
theme(line = element_line(linewidth = 1),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.line = element_line(linewidth = 1),
title = element_text(size = 20))
draft
draft <- ggplot(data = datum, aes(x = Length, y = APE))+
geom_point(size = 5, alpha = 0.7)+
theme_bw()+
geom_smooth(method = "lm", linewidth = 2, alpha = 0.5, linetype = 2)+
scale_x_continuous(position = "top")+
labs(x = "Length (nt)",
y = "Average Positional Entropy",
title = paste0("y = ", round(m, 2), "x + ", round(b,2)))+
theme(line = element_line(linewidth = 1),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.line = element_line(linewidth = 1),
title = element_text(size = 20))
draft
draft <- ggplot(data = datum, aes(x = Length, y = APE))+
geom_point(size = 5, alpha = 0.7)+
theme_bw()+
geom_smooth(method = "lm", linewidth = 2, alpha = 0.5, linetype = 2)+
labs(x = "Length (nt)",
y = "Average Positional Entropy",
title = paste0("y = ", round(m, 2), "x + ", round(b,2)))+
theme(line = element_line(linewidth = 1),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.line = element_line(linewidth = 1),
title = element_text(size = 20))
drraft
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = log(APE)))+
geom_point(size = 5, alpha = 0.7)+
theme_bw()+
geom_smooth(method = "lm", linewidth = 2, alpha = 0.5, linetype = 2)+
labs(x = "MFE/Length",
y = "Average Positional Entropy (log10)",
title = paste0("y = ", round(m, 2), "x + ", round(b,2)))+
theme(line = element_line(linewidth = 1),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.line = element_line(linewidth = 1),
title = element_text(size = 20))
draft
q()
setwd("Documents/smithy/cy1_hp/")
list.files()
setwd("../mah_manuscript/")
list.files()
library(ggpubr)
library(tidyverse)
datum <- read_csv("hairpin_analysis/cy1_hps.csv")
fit <- lm(dG~Length, data = datum)
summary(fit)
fit <- lm(dG~Length, data = datum[grepl("H", datum$Name),])
summary(fit)
fit <- lm(dG~Length, data = datum)
summary(fit)
fit <- lm(dG~Length, data = datum[grepl("H", datum$Name),])
summary(fit)
datum <- read_csv("hairpin_analysis/cy1_hps.csv")
fit <- lm(dG~Length, data = datum[grepl("H", datum$Name),])
summary(fit)
confint(fit, 'Length', level = 0.95)
fit <- lm(dG~Length, data = datum)
summary(fit)
confint(fit, 'Length', level = 0.95)
fit <- lm(dG~Length, data = datum[grepl("H", datum$Name) & !grepl("H3", datum$Name),])
summary(fit)
fit <- lm(dG~Length, data = datum[grepl("H", datum$Name),])
summary(fit)
confint(fit, 'Length', level = 0.95)
fit <- lm(dG~Length, data = datum)
summary(fit)
confint(fit, 'Length', level = 0.95)
fit <- lm(dG~Length, data = datum[grepl("H", datum$Name) & !grepl("H2", datum$Name),])
summary(fit)
fit <- lm(dG~Length, data = datum[grepl("H", datum$Name) & !grepl("H3", datum$Name),])
summary(fit)
fit <- lm(dG~Length, data = datum[grepl("H", datum$Name) & !grepl("H4", datum$Name),])
summary(fit)
fit <- lm(dG~Length, data = datum[grepl("H", datum$Name) & !grepl("H1", datum$Name),])
summary(fit)
fit <- lm(dG~Length, data = datum[grepl("H", datum$Name) & !grepl("H5", datum$Name),])
summary(fit)
confint(fit, 'Length', level = 0.95)
View(datum)
nchar(datum$Sequence)
fit <- lm(dG~Length, data = datum)
summary(fit)
-0.42*160-284
(-0.42*160)-2.84
fit <- lm(dG~Length, data = datum[grepl("H", datum$Name) & !grepl("H5", datum$Name),])
summary(fit)
confint(fit, 'Length', level = 0.95)
(-0.56*160)-2.84
(-0.31*160)-2.84
92.44-70
70-52.44
fit <- lm(dG~Length, data = datum)
summary(fit)
confint(fit, 'Length', level = 0.95)
(-0.43002*160)-1.27764
(-0.4712157*160)-1.27764
(-0.3888276*160)-1.27764
setwd("../../Github/Simon_lab/hairpin_analysis/")
fit <- lm(dG~Length, data = datum)
summary(fit)
confint(fit, 'Length', level = 0.95)
x <- 198
(-0.4712157*x)-1.8947
(-0.43002*x)-1.8947
(-0.3888276*x)-1.8947
quit()
