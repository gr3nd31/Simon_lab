maxer <- maxer+shifter
miner <- miner-shifter
interim <- df[df$APE < target_ape*maxer & df$APE > target_ape*miner &
df$pe_slope < target_PEslope*maxer & df$pe_slope > target_PEslope*miner &
df$GC < target_GC*maxer & df$GC > target_GC*miner &
df$Bulge == bulge &
df$BulgeSize < bulge_size*maxer & df$BulgeSize > bulge_size*miner &
df$Complementarity < complementarity*maxer & df$Complementarity > complementarity*miner,]
# Confirms there are enough target sequences
if (nrow(interim) > 0){
if_enough <- readline(prompt = paste0("Found ", nrow(interim), " sequences with parameters within ", (maxer-1)*100,"% of targets. Is this enough (Y/n)?"))
if (if_enough != "n"){
print("ending")
enough <- TRUE
break
}
} else if (maxer >= cutoff){
cat("Relaxation of parameters has surpassed cutoff threshold. Aborting search.\n")
break
}
}
if (enough | nrow(interim) > 0){
cat(paste0("Found ", nrow(interim), " sequences within ", (maxer-1)*100, "% of the target parameters.\n"))
write_csv(interim, out_file)
} else {
cat("Unable to find matching sequences. Run more iterations and try again.\n")
print(maxer)
}
}
}
find_a_hairpin(datum)
find_a_hairpin <- function(df = datum,
shifter = 0.1,
target_ape = 0.2,
target_dGslope = -0.41,
target_PEslope = 0.1,
target_GC = 0.5,
bulge = "None",
bulge_size = 0.1,
bulge_position = 0.5,
complementarity = 100,
target_structure = "",
cutoff = 3,
out_file = "targets.csv"){
print("Starting search")
maxer <- 1
miner <- 1
if (!"pe_slope" %in% names(df)){
cat("Running PE slope calculations...\n")
df <- pe_slope(df)
}
if (target_structure != ""){
df <- df[df$Structure == target_structure,]
}
if (nrow(df) < 1){
cat("No sequences with given structure. Aborting search.\n")
} else {
cat("Running initial search...\n")
interim <- df[df$APE == target_ape &
df$pe_slope == target_PEslope &
df$GC == target_GC &
df$Bulge == bulge &
df$BulgeSize == bulge_size &
df$Complementarity == complementarity,]
if (nrow(interim) < 1){
cat("Initial run did not find a sequence. Relaxing search parameters...")
enough <- FALSE
} else {
if_enough <- readline(prompt = paste0("Found ", nrow(interim), " sequences with desired targets. Is this enough (Y/n)?"))
if (if_enough != "n"){
enough <- TRUE
} else{
enough <- FALSE
}
}
# Iterates through target parameter relaxation until hits are found
while (nrow(interim) < 1 & enough == FALSE){
maxer <- maxer+shifter
miner <- miner-shifter
interim <- df[df$APE < target_ape*maxer & df$APE > target_ape*miner &
df$pe_slope < target_PEslope*maxer & df$pe_slope > target_PEslope*miner &
df$GC < target_GC*maxer & df$GC > target_GC*miner &
df$Bulge == bulge &
df$BulgeSize < bulge_size*maxer & df$BulgeSize > bulge_size*miner &
df$Complementarity < complementarity*maxer & df$Complementarity > complementarity*miner,]
# Confirms there are enough target sequences
if (nrow(interim) > 0){
if_enough <- readline(prompt = paste0("Found ", nrow(interim), " sequences with parameters within ", (maxer-1)*100,"% of targets. Is this enough (Y/n)?"))
if (if_enough != "n"){
print("ending")
enough <- TRUE
}
} else if (maxer >= cutoff){
cat("Relaxation of parameters has surpassed cutoff threshold. Aborting search.\n")
break
}
}
if (enough | nrow(interim) > 0){
cat(paste0("Found ", nrow(interim), " sequences within ", (maxer-1)*100, "% of the target parameters.\n"))
write_csv(interim, out_file)
} else {
cat("Unable to find matching sequences. Run more iterations and try again.\n")
print(maxer)
}
}
}
find_a_hairpin(datum)
find_a_hairpin(datum)
find_a_hairpin <- function(df = datum,
shifter = 0.1,
target_ape = 0.2,
target_dGslope = -0.41,
target_PEslope = 0.1,
target_GC = 0.5,
bulge = "None",
bulge_size = 0.1,
bulge_position = 0.5,
complementarity = 100,
target_structure = "",
cutoff = 3,
out_file = "targets.csv"){
print("Starting search")
maxer <- 1
miner <- 1
if (!"pe_slope" %in% names(df)){
cat("Running PE slope calculations...\n")
df <- pe_slope(df)
}
if (target_structure != ""){
df <- df[df$Structure == target_structure,]
}
if (nrow(df) < 1){
cat("No sequences with given structure. Aborting search.\n")
} else {
cat("Running initial search...\n")
interim <- df[df$APE == target_ape &
df$pe_slope == target_PEslope &
df$GC == target_GC &
df$Bulge == bulge &
df$BulgeSize == bulge_size &
df$Complementarity == complementarity,]
if (nrow(interim) < 1){
cat("Initial run did not find a sequence. Relaxing search parameters...")
enough <- FALSE
} else {
if_enough <- readline(prompt = paste0("Found ", nrow(interim), " sequences with desired targets. Is this enough (Y/n)?"))
if (if_enough != "n"){
enough <- TRUE
} else{
enough <- FALSE
}
}
# Iterates through target parameter relaxation until hits are found
while (nrow(interim) < 1 | enough == FALSE){
maxer <- maxer+shifter
miner <- miner-shifter
interim <- df[df$APE < target_ape*maxer & df$APE > target_ape*miner &
df$pe_slope < target_PEslope*maxer & df$pe_slope > target_PEslope*miner &
df$GC < target_GC*maxer & df$GC > target_GC*miner &
df$Bulge == bulge &
df$BulgeSize < bulge_size*maxer & df$BulgeSize > bulge_size*miner &
df$Complementarity < complementarity*maxer & df$Complementarity > complementarity*miner,]
# Confirms there are enough target sequences
if (nrow(interim) > 0){
if_enough <- readline(prompt = paste0("Found ", nrow(interim), " sequences with parameters within ", (maxer-1)*100,"% of targets. Is this enough (Y/n)?"))
if (if_enough != "n"){
enough <- TRUE
}
} else if (maxer >= cutoff){
cat("Relaxation of parameters has surpassed cutoff threshold. Aborting search.\n")
break
}
}
if (enough | nrow(interim) > 0){
cat(paste0("Found ", nrow(interim), " sequences within ", (maxer-1)*100, "% of the target parameters.\n"))
write_csv(interim, out_file)
} else {
cat("Unable to find matching sequences. Run more iterations and try again.\n")
print(maxer)
}
}
}
find_a_hairpin(datum)
datum <- read_csv("targets.csv")
ggplot(data = datum, aes(x = dG_length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
theme_bw()
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
theme_bw()
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
lims(x = c(-1,0))+
theme_bw()
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
lims(x = c(-1.2,0))+
theme_bw()
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
datum <- read_csv("Downloads/HP_1_permutations_sorted_top100.csv")
the_file <- ""
seq_num <- 1
for (i in unique(datum$sequence)){
the_file<- paste0(the_file, ">Sequence_", seq_num,"\n",i,"\n")
seq_num=seq_num+1
}
cat(the_file, file = "BD.fasta")
datum <- read_csv("Documents/Github/Simon_lab/hairpin_analysis/data.csv")
datum <- pe_slope(datum)
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
datum <- read_csv("Documents/Github/Simon_lab/hairpin_analysis/data.csv")
the_file <- ""
View(datum)
the_file <- ""
for (i in unique(datum$Name)){
the_file<- paste0(the_file, ">", i,"\n",datum[datum$Name,]$Structure, "\n")
}
the_file <- ""
for (i in unique(datum$Name)){
the_file<- paste0(the_file, ">", i,"\n",datum[datum$Name == i,]$Structure, "\n")
}
datum <- read_csv("Downloads/HP_1_permutations_sorted_top100.csv")
the_file <- ""
seq_num <- 1
for (i in unique(datum$sequence)){
the_file<- paste0(the_file, ">Sequence_", seq_num,"\n",i,"\n")
seq_num=seq_num+1
}
cat(the_file, file = "BD.fasta")
datum <- read_csv("Documents/Github/Simon_lab/hairpin_analysis/data.csv")
the_file <- ""
for (i in unique(datum$Name)){
the_file<- paste0(the_file, ">", i,"\n",datum[datum$Name == i,]$Structure, "\n")
}
cat(the_file, file = "Documents/Github/Simon_lab/strucs.fasta")
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
datum <- read_csv("Documents/Github/Simon_lab/hairpin_analysis/data.csv")
datum <- pe_slope(datum)
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
datum$close <- "N"
head(datum)
datum[datum$Name == ">Sequence_6" | datum$Name == ">CY1" |
datum$Name == ">Sequence_23" | datum$Name == ">Sequence_27" |
datum$Name == ">Sequence_33",]$close <- "Y"
ggsave("graph.png", dpi = 300)
ggplot(data = datum, aes(x = dG_Length, y = APE, color = close))+
geom_point(size = 5)+
#scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
View(datum)
datum[datum$Name == ">Sequence_6" | datum$Name == ">CY1_WT" |
datum$Name == ">Sequence_23" | datum$Name == ">Sequence_27" |
datum$Name == ">Sequence_33",]$close <- "Y"
ggsave("graph.png", dpi = 300)
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
datum$close <- "N"
datum[datum$Name == ">Sequence_6" | datum$Name == ">CY1_WT" |
datum$Name == ">Sequence_23" | datum$Name == ">Sequence_27" |
datum$Name == ">Sequence_33",]$close <- "Y"
ggsave("graph.png", dpi = 300)
ggplot(data = datum, aes(x = dG_Length, y = APE, color = close))+
geom_point(size = 5)+
#scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
datum[datum$Name == ">Sequence_6" | datum$Name == ">CY_WT" |
datum$Name == ">Sequence_23" | datum$Name == ">Sequence_27" |
datum$Name == ">Sequence_33",]$close <- "Y"
ggplot(data = datum, aes(x = dG_Length, y = APE, color = close))+
geom_point(size = 5)+
#scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
ggsave("closest.png", dpi = 300)
q()
library(ggpubr)
library(tidyverse)
datum <- read_csv("Documents/smithy/inserts.csv")
datum
datum$logAPE <- log(datum$APE, 10)
datum$dG_Length <- datum$MFE/datum$Length
ggplto(datum, aes(x = dG_Length, y = logAPE, colour = Stable))+
geom_point()+
theme_bw()
ggplot(datum, aes(x = dG_Length, y = logAPE, colour = Stable))+
geom_point()+
theme_bw()
ggplot(datum, aes(x = dG_Length, y = logAPE, colour = Descr))+
geom_point()+
theme_bw()
ggplot(datum, aes(x = dG_Length, y = logAPE, shape = Descr, color = Stable))+
geom_point()+
theme_bw()
ggplot(datum, aes(x = dG_Length, y = logAPE, shape = Descr, color = Stable))+
geom_point(size = 5)+
theme_bw()
ggplot(datum, aes(x = dG_Length, y = logAPE, shape = Descr, color = Stable))+
geom_point(size = 5)+
scale_color_manual(values = c("blue", "black", "red"))
ggplot(datum, aes(x = dG_Length, y = logAPE, shape = Descr, color = Stable))+
geom_point(size = 5)+
scale_color_manual(values = c("blue", "black", "red"))+
theme_bw()
ggplot(datum %>% arrange(MFE), aes(x = dG_Length, y = logAPE, shape = Descr, color = Stable))+
geom_point(size = 5)+
scale_color_manual(values = c("blue", "black", "red"))+
theme_bw()
ggplot(datum %>% arrange(APE), aes(x = dG_Length, y = logAPE, shape = Descr, color = Stable))+
geom_point(size = 5)+
scale_color_manual(values = c("blue", "black", "red"))+
theme_bw()
5/22
1- 5/22
datum <- read_csv("Documents/smithy/hairpin_analysis/complementary_data/data.csv")
lm(dG~Length, data = datum)
datum <- read_csv("Documents/smithy/hairpin_analysis/complementary_data/data_0.9.csv")
lm(dG~Length, data = datum)
datum <- read_csv("Documents/smithy/hairpin_analysis/complementary_data/data_0.8.csv")
lm(dG~Length, data = datum)
datum <- read_csv("Documents/smithy/hairpin_analysis/complementary_data/data_0.7.csv")
lm(dG~Length, data = datum)
datum <- read_csv("Documents/smithy/hairpin_analysis/complementary_data/data_0.6.csv")
lm(dG~Length, data = datum)
datum <- read_csv("Documents/smithy/hairpin_analysis/complementary_data/data_0.5.csv")
lm(dG~Length, data = datum)
trick <- tibble("Percent" = c(100, 90, 80, 70, 60, 50), "Slope" = c(-1.06, -0.906, -0.75, -0.605, -0.47, -0.381))
ggplot(data = trick, aes(x=Percent, y=Slope))+geom_point(size = 5)+theme_bw()
ggplot(data = trick, aes(x=Percent, y=Slope))+geom_point(size = 5)+theme_bw()+geom_smooth()
ggplot(data = trick, aes(x=Percent, y=Slope))+geom_point(size = 5)+theme_bw()+geom_smooth(method = "lm")
ggsave("Desktop/slopes.svg")
lm(Slope~Percent, data = trick)
x <- lm(Slope~Percent, data = trick)
summary(x)
nrow(datum)
names(datum)
datum$Ratio <- datum$`dG_Length\n`
datum$Ratio <- datum$dG/datum$Length
setwd("Documents/smithy/hairpin_analysis/complementary_data/")
datum <- read_csv("data_0.5.csv")
setwd("../../../Github/Simon_lab/hairpin_analysis/")
list.files()
datum <- read_csv("data.csv")
datum$logAPE <- log(datum$APE, 10)
x <- lm(dG_length~logAPE, data = datum)
x <- lm(dG_Length~logAPE, data = datum)
summary(x)
x <- lm(dG_Length~logAPE*GC, data = datum)
summary(x)
x <- lm(dG_Length~logAPE+GC, data = datum)
summary(x)
x <- lm(dG_Length~logAPE, data = datum)
summary(x)
source("~/Documents/Github/Simon_lab/hairpin_analysis/bin/pe_slope.R")
datum <- pe_slope(datum)
x <- lm(dG_Length~logAPE*GC_compression_percent, data = datum)
names(datum)
x <- lm(dG_Length~logAPE*GC_compressed_percent, data = datum)
summary(x)
x <- lm(dG_Length~logAPE*compressed_percent, data = datum)
summary(x)
x <- lm(dG_Length~logAPE*bp, data = datum)
datum$percent_bp <- datum$bp/datum$StemLength
x <- lm(dG_Length~logAPE*percent_bp, data = datum)
summary(x)
x <- lm(logAPE~dG_Length*percent_bp, data = datum)
summary(x)
x <- lm(logAPE~dG_Length, data = datum)
summary(x)
x <- lm(logAPE~dG_Length*GC, data = datum)
summary(x)
x <- lm(logAPE~dG_Length*GC_compressed_percent, data = datum)
summary(x)
x <- lm(logAPE~dG_Length*pe_slope, data = datum)
summary(x)
x <- lm(logAPE~dG_Length*pe_intercept, data = datum)
names(datum)
x <- lm(logAPE~dG_Length*pe_intecept, data = datum)
summary(x)
x <- lm(logAPE~percent_bp, data = datum)
summary(x)
x <- lm(logAPE~percent_bp*GC, data = datum)
summary(x)
native <- read_csv("../../../smithy/inserts.csv")
native <- native[native$Descr == "Native",]
View(native)
native$dG_Lenght <- native$MFE/native$Length
native <- read_csv("../../../smithy/inserts.csv")
native$dG_Length <- native$MFE/native$Length
native$logAPE <- log(native$APE, 10)
lm(logAPE~dG_Length, data = native)
lm(dG_Length~logAPE, data = native)
lm(logAPE~dG_Length, data = datum)
summary(lm(logAPE~dG_Length, data = datum))
native[native$Descr == "Native",]
ggplot(data = native, aes(x=dG_Length, y=logAPE))+geom_point(size = 5)+theme_bw()+geom_smooth(method = "lm")
ggplot(data = native, aes(x=dG_Length, y=logAPE), color = Descr)+geom_point(size = 5)+theme_bw()+geom_smooth(method = "lm")
ggplot(data = native, aes(x=dG_Length, y=logAPE, color = Descr))+geom_point(size = 5)+theme_bw()+geom_smooth(method = "lm")
ggplot(data = native[native$Descr!= "Stable",], aes(x=dG_Length, y=logAPE, color = Descr))+geom_point(size = 5)+theme_bw()+geom_smooth(method = "lm")
10^1.85
lm(dG_Length~logAPE, data = native)
summary(lm(dG_Length~logAPE, data = native))
summary(lm(logAPE~dG_Length, data = native))
ggplot(data = daum, aes(x = dG_Length, y = logAPE, color = GC))+
geom_point(size = 5, alpha = 0.3)+
#  scale_color_viridis_b()+
geom_smooth(method = "lm")+
facet_wrap(~Bulge)+
#  lims(x = c(-1.2,0),
#       y = c(0,2))+
theme_bw()
ggplot(data = datum, aes(x = dG_Length, y = logAPE, color = GC))+
geom_point(size = 5, alpha = 0.3)+
#  scale_color_viridis_b()+
geom_smooth(method = "lm")+
facet_wrap(~Bulge)+
#  lims(x = c(-1.2,0),
#       y = c(0,2))+
theme_bw()
ggplot(data = datum, aes(x = dG_Length, y = logAPE, color = GC))+
geom_point(size = 5, alpha = 0.3)+
scale_color_viridis_b()+
geom_smooth(method = "lm")+
#facet_wrap(~Bulge)+
#  lims(x = c(-1.2,0),
#       y = c(0,2))+
theme_bw()
ggplot(data = datum, aes(x = dG_Length, y = logAPE, color = GC))+
geom_point(size = 5, alpha = 0.3)+
scale_color_viridis_c()+
geom_smooth(method = "lm")+
#facet_wrap(~Bulge)+
#  lims(x = c(-1.2,0),
#       y = c(0,2))+
theme_bw()
ggsave("~/Desktop/comp_GC.png", dpi = 300)
summary(lm(logAPE~dG_Length*GC, data = datum))
summary(lm(logAPE~dG_Length+GC, data = datum))
sqrt(0.82)
sqrt(0.85)
log(0.38, 10)
ggplot(data = datum, aes(x = dG_Length, y = logAPE, color = GC))+
geom_point(size = 5, alpha = 0.3)+
scale_color_viridis_c()+
geom_hline(yintercept = -0.4202)
log(0.35, 10)
ggplot(data = datum, aes(x = dG_Length, y = logAPE, color = GC))+
geom_point(size = 5, alpha = 0.3)+
scale_color_viridis_c()+
geom_hline(yintercept = -0.456)
ggplot(data = datum, aes(x=Length, y = dG, color = GC))+ geom_point(size = 5)+scale_color_viridis_b()+theme_bw()
ggplot(data = datum, aes(x=Complementarity, y = dG, color = GC))+ geom_point(size = 5)+scale_color_viridis_b()+theme_bw()
ggplot(data = datum, aes(x=Complementarity, y = dG, color = GC))+ geom_point(size = 5)+scale_color_viridis_c()+theme_bw()
ggplot(data = datum, aes(x=Complementarity, y = dG, color = GC))+ geom_point(size = 5, alpha = 0.5)+scale_color_viridis_c()+theme_bw()
ggsave("perfect.png", dpi = 500)
ggplot(data = datum, aes(x=GC, y = dG, color = Complementarity))+ geom_point(size = 5, alpha = 0.5)+scale_color_viridis_b()+theme_bw()
ggplot(data = datum, aes(x=GC, y = dG, color = Complementarity))+ geom_point(size = 5, alpha = 0.5)+theme_bw()
datum$Complementarity <- as.character(datum$Complementarity)
ggplot(data = datum, aes(x=GC, y = dG, color = Complementarity))+ geom_point(size = 5, alpha = 0.5)+theme_bw()
ggplot(data = datum, aes(x=GC, y = dG, color = Complementarity))+ geom_point(size = 5, alpha = 0.5)+theme_bw()+geom_smooth(method = "lm")
ggplot(data = datum, aes(x=GC, y = dG, color = Complementarity))+ geom_point(size = 5, alpha = 0.5)+theme_bw()+geom_smooth(method = "lm")+facet_wrap(~Complementarity)
ggplot(data = datum, aes(x=GC, y = dG, color = Complementarity))+ geom_point(size = 5, alpha = 0.5)+theme_bw()+geom_smooth(method = "lm")+facet_wrap(~Complementarity)+theme(legend.position = "none")
datum$Complementarity <- ordered(datum$Complementarity, levels = c("100", "90", "80", "70", "60", "50", "40", "30", "20", "10", "0"))
ggplot(data = datum, aes(x=GC, y = dG, color = Complementarity))+ geom_point(size = 5, alpha = 0.5)+theme_bw()+geom_smooth(method = "lm")+facet_wrap(~Complementarity)+theme(legend.position = "none")
ggplot(data = datum, aes(x=GC, y = dG, color = APE))+ geom_point(size = 5, alpha = 0.5)+theme_bw()+geom_smooth(method = "lm")+facet_wrap(~Complementarity)+theme(legend.position = "none")
ggplot(data = datum, aes(x=GC, y = dG, color = APE))+ geom_point(size = 5, alpha = 0.5)+theme_bw()+geom_smooth(method = "lm")+facet_wrap(~Complementarity)+theme(legend.position = "none")+scale_color_viridis_c()
ggplot(data = datum, aes(x=GC, y = dG, color = APE))+ geom_point(size = 5, alpha = 0.5)+theme_bw()+geom_smooth(method = "lm")+facet_wrap(~Complementarity)+theme(legend.position = "top")+scale_color_viridis_c()
ggplot(data = datum, aes(x=GC, y = dG, color = APE))+ geom_point(size = 5, alpha = 0.5)+theme_bw()+geom_smooth(method = "lm")+facet_wrap(~Complementarity)+theme(legend.position = "top")+scale_color_viridis_c()+labs(x = "GC content")
ggplot(data = datum, aes(x=GC, y = dG, color = APE))+ geom_point(size = 5, alpha = 0.5)+theme_bw()+geom_smooth(method = "lm")+facet_wrap(~Complementarity)+theme(legend.position = "top")+scale_color_viridis_c()+labs(x = "GC content", y = "MFE")
ggsave("~/Desktop/GC_to dG_perfect.png", dpi = 500)
ggplot(data = datum, aes(x=GC, y = dG, color = APE))+ geom_point(size = 5, alpha = 0.5)+theme_bw()+geom_smooth(method = "lm")+facet_wrap(~Complementarity)+theme(legend.position = "top")+scale_color_viridis_b()+labs(x = "GC content", y = "MFE")
ggsave("~/Desktop/GC_to dG_perfect.png", dpi = 500)
ggplot(data = datum, aes(x=GC, y = dG, color = logAPE))+ geom_point(size = 5, alpha = 0.5)+theme_bw()+geom_smooth(method = "lm")+facet_wrap(~Complementarity)+theme(legend.position = "top")+scale_color_viridis_b()+labs(x = "GC content", y = "MFE")
ggplot(data = native, aes(x=GC, y = dG, color = logAPE))+ geom_point(size = 5, alpha = 0.5)+theme_bw()+geom_smooth(method = "lm")+theme(legend.position = "top")+scale_color_viridis_b()+labs(x = "GC content", y = "MFE")
ggplot(data = native, aes(x=GC, y = MEF, color = logAPE))+ geom_point(size = 5, alpha = 0.5)+theme_bw()+geom_smooth(method = "lm")+theme(legend.position = "top")+scale_color_viridis_b()+labs(x = "GC content", y = "MFE")
ggplot(data = native, aes(x=GC, y = MFE, color = logAPE))+ geom_point(size = 5, alpha = 0.5)+theme_bw()+geom_smooth(method = "lm")+theme(legend.position = "top")+scale_color_viridis_b()+labs(x = "GC content", y = "MFE")
ggplot(data = native, aes(x=GC, y = MFE, color = descr))+ geom_point(size = 5, alpha = 0.5)+theme_bw()+geom_smooth(method = "lm")+theme(legend.position = "top")+scale_color_viridis_b()+labs(x = "GC content", y = "MFE")
ggplot(data = native, aes(x=GC, y = MFE, color = Descr))+ geom_point(size = 5, alpha = 0.5)+theme_bw()+geom_smooth(method = "lm")+theme(legend.position = "top")+scale_color_viridis_b()+labs(x = "GC content", y = "MFE")
ggplot(data = native, aes(x=GC, y = MFE, color = Descr))+ geom_point(size = 5, alpha = 0.5)+theme_bw()+geom_smooth(method = "lm")+labs(x = "GC content", y = "MFE")
q()
