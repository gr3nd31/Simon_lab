datum[datum$Name != ">Sequence_6",]$bp
datum[datum$Name == ">Sequence_6",]$bp
datum[datum$Name == ">Sequence_23",]$bp
datum[datum$Name == ">Sequence_33",]$bp
datum[datum$Name == ">Sequence_27",]$bp
q()
library(tidyverse)
x <- "CTCGATGCTTCCAGGTTCGATCTGCATGTCAGCGTTGGAATGCTTAAGTTCACTCATAA"
str_replace_all(x, "T", "U")
x <- "CTCGATGCGTCCAGGTTCGATCTGCATGTCAGCGTTGGAATGCTTAAGTTCACTCATAA"
str_replace_all(x, "T", "U")
x <- "CATTTGCGGCGCAAAGTAGCTCCTGACTCTAATGCATTTAGGCCTTTTGCTATACACGGT"
str_replace_all(x, "T", "U")
x <- "CAGTAAGAGGTTGTATGGCGAGGGGGCCGAACCGTGTATAGCAAAAGGCCTAAATGCATT"
str_replace_all(x, "T", "U")
x <- "AGAGTCAGGAGCTACTTTGCGCCGCAAATGGGAGAAGTTTTCATCCCCAGTGTGCGTTTC"
str_replace_all(x, "T", "U")
q()
q()
library(ggpubr)
library(tidyverse)
datum <- read_csv("Documents/smithy/tbsv/data.csv")
View(datum)
datum$Structure
for (i in unique(datum$Length)){
for (j in unique(datum[datum$Length == i,]$Structure)){
print(j)
}
}
j
substr(j, 3, 3)
for (i in unique(datum$Length)){
for (j in unique(datum[datum$Length == i,]$Structure)){
for (k in c(1:nchar(j))){
interim <- tibble("Length" = i,
"ID" = j,
"Position" = k,
"Seq" = substr(datum[datum$Length == i & datum$Structure == j,]$Sequence,k, k),
"Structure" = substr(datum[datum$Length == i & datum$Structure == j,]$Structure,k, k))
if (!exists("all_data")){
all_data <- interim
} else {
all_data <- rbind(all_data, interim)
}
}
}
}
View(interim)
rm(all_data)
datum <- read_csv("Documents/smithy/tbsv/data.csv")
for (i in unique(datum$Length)){
for (j in unique(datum[datum$Length == i,]$Structure)){
print(j)
for (k in c(1:nchar(j))){
interim <- tibble("Length" = i,
"ID" = j,
"Position" = k,
"Seq" = substr(datum[datum$Length == i & datum$Structure == j,]$Sequence,k, k),
"Structure" = substr(datum[datum$Length == i & datum$Structure == j,]$Structure,k, k))
if (!exists("all_data")){
all_data <- interim
} else {
all_data <- rbind(all_data, interim)
}
}
}
}
View(all_data)
table(all_data$Length)
q()
install.packages(c("broom", "car", "glue"))
exit
q()
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(ggpubr))
datum <-read_csv("Documents/smithy/FAH/hairpin_analysis/data.csv")
datum$APE
m = lm(dG~APE, data = datum)[[1]][2]
b = lm(dG~APE, data = datum)[[1]][1]
draft <- ggplot(data = datum, aes(x = Length, y = APE))+
geom_point(size = 5, alpha = 0.7)+
theme_bw()+
geom_smooth(method = "lm", linewidth = 2, alpha = 0.5, linetype = 2)+
scale_x_continuous(position = "top")+
labs(x = "Length (nt)",
y = "Minimum Free Energy",
title = paste0("y = ", round(m, 2), "x + ", round(b,2)))+
theme(line = element_line(linewidth = 1),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.line = element_line(linewidth = 1),
title = element_text(size = 20))
darft
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE))+
geom_point(size = 5, alpha = 0.7)+
theme_bw()+
geom_smooth(method = "lm", linewidth = 2, alpha = 0.5, linetype = 2)+
scale_x_continuous(position = "top")+
labs(x = "Length (nt)",
y = "Average Positional Entropy",
title = paste0("y = ", round(m, 2), "x + ", round(b,2)))+
theme(line = element_line(linewidth = 1),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.line = element_line(linewidth = 1),
title = element_text(size = 20))
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = log(APE)))+
geom_point(size = 5, alpha = 0.7)+
theme_bw()+
geom_smooth(method = "lm", linewidth = 2, alpha = 0.5, linetype = 2)+
scale_x_continuous(position = "top")+
labs(x = "Length (nt)",
y = "Average Positional Entropy",
title = paste0("y = ", round(m, 2), "x + ", round(b,2)))+
theme(line = element_line(linewidth = 1),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.line = element_line(linewidth = 1),
title = element_text(size = 20))
ggsave(paste0(the_name,"Length_by_APE.png"), dpi = 300, plot = draft, width = 6, height = 6)
draft
m = lm(dG~log(APE), data = datum)[[1]][2]
b = lm(dG~log(APE), data = datum)[[1]][1]
draft <- ggplot(data = datum, aes(x = dG_Length, y = log(APE)))+
geom_point(size = 5, alpha = 0.7)+
theme_bw()+
geom_smooth(method = "lm", linewidth = 2, alpha = 0.5, linetype = 2)+
scale_x_continuous(position = "top")+
labs(x = "MFE/Length",
y = "Average Positional Entropy (log10)",
title = paste0("y = ", round(m, 2), "x + ", round(b,2)))+
theme(line = element_line(linewidth = 1),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.line = element_line(linewidth = 1),
title = element_text(size = 20))
draft
m = lm(dG~log(APE), data = datum)[[1]][2]
b = lm(dG~log(APE), data = datum)[[1]][1]
draft <- ggplot(data = datum, aes(x = dG_Length, y = log(APE)))+
geom_point(size = 5, alpha = 0.7)+
theme_bw()+
geom_smooth(method = "lm", linewidth = 2, alpha = 0.5, linetype = 2)+
scale_x_continuous(position = "top")+
labs(x = "MFE/Length",
y = "Average Positional Entropy (log10)",
title = paste0("y = ", round(m, 2), "x + ", round(b,2)))+
theme(line = element_line(linewidth = 1),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.line = element_line(linewidth = 1),
title = element_text(size = 20))
draft
draft <- ggplot(data = datum, aes(x = Length, y = APE))+
geom_point(size = 5, alpha = 0.7)+
theme_bw()+
geom_smooth(method = "lm", linewidth = 2, alpha = 0.5, linetype = 2)+
scale_x_continuous(position = "top")+
labs(x = "Length (nt)",
y = "Average Positional Entropy",
title = paste0("y = ", round(m, 2), "x + ", round(b,2)))+
theme(line = element_line(linewidth = 1),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.line = element_line(linewidth = 1),
title = element_text(size = 20))
draft
draft <- ggplot(data = datum, aes(x = Length, y = APE))+
geom_point(size = 5, alpha = 0.7)+
theme_bw()+
geom_smooth(method = "lm", linewidth = 2, alpha = 0.5, linetype = 2)+
labs(x = "Length (nt)",
y = "Average Positional Entropy",
title = paste0("y = ", round(m, 2), "x + ", round(b,2)))+
theme(line = element_line(linewidth = 1),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.line = element_line(linewidth = 1),
title = element_text(size = 20))
drraft
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = log(APE)))+
geom_point(size = 5, alpha = 0.7)+
theme_bw()+
geom_smooth(method = "lm", linewidth = 2, alpha = 0.5, linetype = 2)+
labs(x = "MFE/Length",
y = "Average Positional Entropy (log10)",
title = paste0("y = ", round(m, 2), "x + ", round(b,2)))+
theme(line = element_line(linewidth = 1),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.line = element_line(linewidth = 1),
title = element_text(size = 20))
draft
q()
install.packages(c("askpass", "commonmark", "corrplot", "data.table", "doBy", "emmeans", "evaluate", "officer", "sys", "xfun"))
q()
q()
q()
q()
setwd("Documents/Github/Simon_lab/hairpin_analysis/")
library(tidyverse)
datum <- read_csv("data.csv")
for (i in c(1:nrow(datum))){
print(datum[i,]$Name)
print(datum[i,]$Structure)
}
datum <- read_csv("data.csv")
for (i in c(1:nrow(datum))){
print(datum[i,]$Name)
print(datum[i,]$Structure)
}
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE))+
geom_point(size = 2)+
theme_bw()
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = grepl("Original", datum$Name)))+
geom_point(size = 2)+
theme_bw()
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = grepl("Original", datum$Name)))+
geom_point(size = 2)+
theme_bw()+
theme(legend.position = "top")
draft
for (i in c(1:nrow(datum))){
tim <- datum[i,]$Name
bick <- datum[i,]$Structure
bick <- str_replace_all(bick, "\\.", "U")
bick <- str_replace_all(bick, "\\(", "C")
bick <- str_replace_all(bick, "\\)", "G")
print(bick)
}
timmy <- ""
for (i in c(1:nrow(datum))){
tim <- datum[i,]$Name
bick <- datum[i,]$Structure
bick <- str_replace_all(bick, "\\.", "U")
bick <- str_replace_all(bick, "\\(", "C")
bick <- str_replace_all(bick, "\\)", "G")
#print(bick)
timmy <- paste0(timmy, ">", tim, "\n", bick, "\n")
}
cat(timmy, file = "structs.fasta")
dupes <- datum[str_detect(string = datum$Structure, pattern = "\\(+\\.+\\)\\.*\\(+\\.+\\)+"),]
datum$struct <- ""
timmy <- ""
datum$struct <- ""
for (i in c(1:nrow(datum))){
tim <- datum[i,]$Name
bick <- datum[i,]$Structure
bick <- str_replace_all(bick, "\\.", "U")
bick <- str_replace_all(bick, "\\(", "C")
bick <- str_replace_all(bick, "\\)", "G")
datum[i,]$struct <- bick
#print(bick)
timmy <- paste0(timmy, ">", tim, "\n", bick, "\n")
}
dupes <- datum[str_detect(datum$Name,"Original"),]
dupes <- datum[str_detect(datum$struct, "[CU]+U+[GU]+"),]
dupes <- datum[str_detect(datum$struct, "[CU]+U+[GU]+[CU]+U+[GU]+"),]
dupes <- datum[str_detect(datum$struct, "[CU]+U+[GU]+[CU]+T+[GU]+"),]
dupes <- datum[str_detect(datum$struct, "[CU]+U+[GU]+[CU]+U+[GU]+"),]
dupes <- datum[str_detect(datum$struct, "[C]+U+[GU]+[CU]+U+[G]+"),]
unique(str_detect(datum$struct, "[C]+U+[GU]+[CU]+U+[G]+"))
unique(str_count(datum$struct, "[C]+U+[GU]+[CU]+U+[G]+"))
dupes <- datum[str_count(datum$struct, "[C]+U+[GU]+[CU]+U+[G]+") == 2,]
660/880
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = str_count(datum$struct, "[C]+U+[GU]+[CU]+U+[G]+") == 2))+
geom_point(size = 2)+
theme_bw()+
theme(legend.position = "top")
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = str_count(datum$struct, "[C]+U+[GU]+[CU]+U+[G]+") == 1))+
geom_point(size = 2)+
theme_bw()+
theme(legend.position = "top")
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = str_count(datum$struct, "[C]+U+[GU]+[CU]+U+[G]+") == 3))+
geom_point(size = 2)+
theme_bw()+
theme(legend.position = "top")
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = str_count(datum$struct, "[C]+U+[GU]+[CU]+U+[G]+") == 2))+
geom_point(size = 2)+
theme_bw()+
theme(legend.position = "top")
draft
timmy <- ""
for (i in c(1:nrow(dupes))){
tim <- dupes[i,]$Name
bick <- dupes[i,]$Structure
bick <- str_replace_all(bick, "\\.", "U")
bick <- str_replace_all(bick, "\\(", "C")
bick <- str_replace_all(bick, "\\)", "G")
#datum[i,]$struct <- bick
#print(bick)
timmy <- paste0(timmy, ">", tim, "\n", bick, "\n")
}
cat(timmy, file = "structs_dubs.fasta")
interim <- tibble("NAME")
interim <- tibble("NAME", "C", "U", "G")
interim <- tibble("POS", "C", "U", "G")
interim <- tibble("POS", "C", "U", "G")
for (i in nchar(datum[1,]$struct)){
interim <- bind_rows(interim, tibble("POS" = i, "C" = 0, "U" = 0, "G" = 0))
}
View(interim)
interim <- tibble("POS", "C", "U", "G")
for (i in nchar(datum[1,]$struct)){
interim <- rbind(interim, tibble("POS" = i, "C" = 0, "U" = 0, "G" = 0))
}
interim <- tibble("POS", "C", "U", "G")
for (i in nchar(datum[1,]$struct)){
print(i)
interim <- rbind(interim, tibble("POS" = i, "C" = 0, "U" = 0, "G" = 0))
}
interim <- tibble("POS", "C", "U", "G")
for (i in c(1,nchar(datum[1,]$struct))){
print(i)
interim <- rbind(interim, tibble("POS" = i, "C" = 0, "U" = 0, "G" = 0))
}
rm(interim)
for (i in c(1,nchar(datum[1,]$struct))){
print(i)
interim <- tibble("POS" = i, "C" = 0, "U" = 0, "G" = 0)
if (!exists("allem")){
allem <- interim
} else {
allem <- rbind(allem, interim)
}
}
rm(allem)
for (i in c(1:nchar(datum[1,]$struct))){
print(i)
interim <- tibble("POS" = i, "C" = 0, "U" = 0, "G" = 0)
if (!exists("allem")){
allem <- interim
} else {
allem <- rbind(allem, interim)
}
}
View(allem)
for (i in c(1:nrow(datum))){
thick <- datum[i,]$struct
print(thick)
}
thick[1]
for (i in c(1:nrow(datum))){
thick <- datum[i,]$struct
print(thick)
for (j in c(1:nchar(thick))){
allem[j,substr(thick, j, j)] <- allem[j,substr(thick, j, j)]+1
}
}
View(allem)
allem_long <- allem %>% pivot_longer(cols = c(2:4), names_to = "Call", values_to = "Number")
View(allem_long)
draft <- ggpubr::ggbarplot(data = allem_long, x = "POS", y= "Number", fill = "Call")
draft
ggsave("800_calls.png", dpi = 300)
names(allem_long)
allem_long$percent <- 0
allem_long$percent <- 0
for (i in unique(allem_long$POS)){
tiff <- allem_long[allem_long$POS == i,]
the_m <- max(tiff$Number)
allem_long[allem_long$POS == i,]$percent <- allem_long[allem_long$POS == i,]$Number/sum(tiff$Number)
trick <- paste0(trick, allem_long[allem_long == the_m,]$Call[1])
}
trick <- ""
allem_long$percent <- 0
for (i in unique(allem_long$POS)){
tiff <- allem_long[allem_long$POS == i,]
the_m <- max(tiff$Number)
allem_long[allem_long$POS == i,]$percent <- allem_long[allem_long$POS == i,]$Number/sum(tiff$Number)
trick <- paste0(trick, allem_long[allem_long == the_m,]$Call[1])
}
trick <- ""
allem_long$percent <- 0
for (i in unique(allem_long$POS)){
tiff <- allem_long[allem_long$POS == i,]
the_m <- max(tiff$Number)
allem_long[allem_long$POS == i,]$percent <- allem_long[allem_long$POS == i,]$Number/sum(tiff$Number)
trick <- paste0(trick, allem_long[allem_long$Call == the_m,]$Call[1])
}
View(allem_long)
trick <- ""
allem_long$percent <- 0
for (i in unique(allem_long$POS)){
tiff <- allem_long[allem_long$POS == i,]
the_m <- max(tiff$Number)
allem_long[allem_long$POS == i,]$percent <- allem_long[allem_long$POS == i,]$Number/sum(tiff$Number)
trick <- paste0(trick, allem_long[allem_long$Call == the_m,]$Call)
}
trick <- ""
allem_long$percent <- 0
for (i in unique(allem_long$POS)){
tiff <- allem_long[allem_long$POS == i,]
the_m <- max(tiff$Number)
allem_long[allem_long$POS == i,]$percent <- allem_long[allem_long$POS == i,]$Number/sum(tiff$Number)
trick <- paste0(trick, allem_long[allem_long$Number == the_m,]$Call)
}
trick <- ""
allem_long$percent <- 0
for (i in unique(allem_long$POS)){
tiff <- allem_long[allem_long$POS == i,]
the_m <- max(tiff$Number)
allem_long[allem_long$POS == i,]$percent <- allem_long[allem_long$POS == i,]$Number/sum(tiff$Number)
trick <- paste0(trick, allem_long[allem_long$Number == the_m,]$Call[1])
}
trick <- str_replace_all("U", ".")
trick <- str_replace_all("U", "\\.")
trick <- str_replace_all(trick, "U", "\\.")
trick <- str_replace_all(trick, "C", "\\(")
trick <- str_replace_all(trick, "G", "\\)")
trick
datum[1,]$Structure
View(allem)
View(allem_long)
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = str_count(datum$struct, "[C]+U+[GU]+[CU]+U+[G]+") == 2))+
geom_point(size = 2)+
theme_bw()+
theme(legend.position = "top")
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = str_count(datum$struct, "[C]+U+[GU]+[CU]+U+[G]+") == 2))+
geom_point(size = 4)+
theme_bw()+
theme(legend.position = "top")
draft
datum$apicals <- str_count(datum$struct, "[C]+U+[GU]+[CU]+U+[G]+")
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = apicals)+
theme_bw()+
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = apicals))+
geom_point(size = 4)+
theme_bw()+
theme(legend.position = "top")
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = as.character(apicals)))+
geom_point(size = 4)+
theme_bw()+
theme(legend.position = "top")
draft
View(datum)
datum[datum$dG_Length < -0.5,]
datum[datum$dG_Length < -0.52,]
datum[datum$dG_Length < -0.52,]$struct
datum[datum$dG_Length < -0.52,]$struct
datum[datum$dG_Length < -0.52 & !grepl("Original", datum$Name),]$struct
datum[datum$dG_Length < -0.5 & !grepl("Original", datum$Name),]$struct
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = as.character(apicals)))+
geom_point(size = 4)+
labs(x = "dG/Length")
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = as.character(apicals)))+
geom_point(size = 4)+
labs(x = "dG/Length")+
theme_bw()+
theme(legend.position = "top")
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = as.character(apicals)))+
geom_point(size = 4)+
labs(x = "dG/Length")+
theme_bw()+
theme(legend.position = "top", axis.title = element_text(size = 15))
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = as.character(apicals)))+
geom_point(size = 4)+
labs(x = "dG/Length")+
theme_bw()+
theme(legend.position = "top", axis.title = element_text(size = 16))
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = as.character(apicals)))+
geom_point(size = 4)+
labs(x = "dG/Length")+
theme_bw()+
theme(legend.position = "top", axis.title = element_text(size = 16),
axis.text = element_text(size = 14))
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = as.character(apicals)))+
geom_point(size = 4)+
labs(x = "dG/Length")+
theme_bw()+
theme(legend.position = "top", axis.title = element_text(size = 16),
axis.text = element_text(size = 14, color = "black"))
draft
ggsave("APE_by_dG.png", dpi = 300)
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = grepl("Orig"m datum$Name)))+
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = grepl("Orig", datum$Name)))+
geom_point(size = 4)+
labs(x = "dG/Length")+
theme_bw()+
theme(legend.position = "top", axis.title = element_text(size = 16),
axis.text = element_text(size = 14, color = "black"))
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = log(APE), color = as.character(apicals)))+
geom_point(size = 4)+
labs(x = "dG/Length")+
theme_bw()+
theme(legend.position = "top", axis.title = element_text(size = 16),
axis.text = element_text(size = 14, color = "black"))
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = log(APE), color = grepl("Ori", datum$Name)))+
geom_point(size = 4)+
labs(x = "dG/Length")+
theme_bw()+
theme(legend.position = "top", axis.title = element_text(size = 16),
axis.text = element_text(size = 14, color = "black"))
draft
q()
