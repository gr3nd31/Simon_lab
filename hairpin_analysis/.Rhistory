cat("Running initial search...\n")
interim <- df[df$APE == target_ape &
df$pe_slope == target_PEslope &
df$GC == target_GC &
df$Bulge == bulge &
df$BulgeSize == bulge_size &
df$Complementarity == complementarity,]
if (nrow(interim) < 1){
cat("Initial run did not find a sequence. Relaxing search parameters...")
enough <- FALSE
} else {
if_enough <- readline(prompt = paste0("Found ", nrow(interim), " sequences with desired targets. Is this enough (Y/n)?"))
if (if_enough != "n"){
enough <- TRUE
} else{
enough <- FALSE
}
}
# Iterates through target parameter relaxation until hits are found
while (nrow(interim) < 1 & !enough){
maxer <- maxer+shifter
miner <- miner-shifter
interim <- df[df$APE < target_ape*maxer & df$APE > target_ape*miner &
df$pe_slope < target_PEslope*maxer & df$pe_slope > target_PEslope*miner &
df$GC < target_GC*maxer & df$GC > target_GC*miner &
df$Bulge == bulge &
df$BulgeSize < bulge_size*maxer & df$BulgeSize > bulge_size*miner &
df$Complementarity < complementarity*maxer & df$Complementarity > complementarity*miner,]
# Confirms there are enough target sequences
if (nrow(interim) > 0){
if_enough <- readline(prompt = paste0("Found ", nrow(interim), " sequences with parameters within ", (maxer-1)*100,"% of targets. Is this enough (Y/n)?"))
if (if_enough != "n"){
print("ending")
enough <- TRUE
break
}
} else if (maxer >= cutoff){
cat("Relaxation of parameters has surpassed cutoff threshold. Aborting search.\n")
break
}
}
if (enough | nrow(interim) > 0){
cat(paste0("Found ", nrow(interim), " sequences within ", (maxer-1)*100, "% of the target parameters.\n"))
write_csv(interim, out_file)
} else {
cat("Unable to find matching sequences. Run more iterations and try again.\n")
print(maxer)
}
}
}
find_a_hairpin(datum)
find_a_hairpin <- function(df = datum,
shifter = 0.1,
target_ape = 0.2,
target_dGslope = -0.41,
target_PEslope = 0.1,
target_GC = 0.5,
bulge = "None",
bulge_size = 0.1,
bulge_position = 0.5,
complementarity = 100,
target_structure = "",
cutoff = 3,
out_file = "targets.csv"){
print("Starting search")
maxer <- 1
miner <- 1
if (!"pe_slope" %in% names(df)){
cat("Running PE slope calculations...\n")
df <- pe_slope(df)
}
if (target_structure != ""){
df <- df[df$Structure == target_structure,]
}
if (nrow(df) < 1){
cat("No sequences with given structure. Aborting search.\n")
} else {
cat("Running initial search...\n")
interim <- df[df$APE == target_ape &
df$pe_slope == target_PEslope &
df$GC == target_GC &
df$Bulge == bulge &
df$BulgeSize == bulge_size &
df$Complementarity == complementarity,]
if (nrow(interim) < 1){
cat("Initial run did not find a sequence. Relaxing search parameters...")
enough <- FALSE
} else {
if_enough <- readline(prompt = paste0("Found ", nrow(interim), " sequences with desired targets. Is this enough (Y/n)?"))
if (if_enough != "n"){
enough <- TRUE
} else{
enough <- FALSE
}
}
# Iterates through target parameter relaxation until hits are found
while (nrow(interim) < 1 & enough == FALSE){
maxer <- maxer+shifter
miner <- miner-shifter
interim <- df[df$APE < target_ape*maxer & df$APE > target_ape*miner &
df$pe_slope < target_PEslope*maxer & df$pe_slope > target_PEslope*miner &
df$GC < target_GC*maxer & df$GC > target_GC*miner &
df$Bulge == bulge &
df$BulgeSize < bulge_size*maxer & df$BulgeSize > bulge_size*miner &
df$Complementarity < complementarity*maxer & df$Complementarity > complementarity*miner,]
# Confirms there are enough target sequences
if (nrow(interim) > 0){
if_enough <- readline(prompt = paste0("Found ", nrow(interim), " sequences with parameters within ", (maxer-1)*100,"% of targets. Is this enough (Y/n)?"))
if (if_enough != "n"){
print("ending")
enough <- TRUE
}
} else if (maxer >= cutoff){
cat("Relaxation of parameters has surpassed cutoff threshold. Aborting search.\n")
break
}
}
if (enough | nrow(interim) > 0){
cat(paste0("Found ", nrow(interim), " sequences within ", (maxer-1)*100, "% of the target parameters.\n"))
write_csv(interim, out_file)
} else {
cat("Unable to find matching sequences. Run more iterations and try again.\n")
print(maxer)
}
}
}
find_a_hairpin(datum)
find_a_hairpin(datum)
find_a_hairpin <- function(df = datum,
shifter = 0.1,
target_ape = 0.2,
target_dGslope = -0.41,
target_PEslope = 0.1,
target_GC = 0.5,
bulge = "None",
bulge_size = 0.1,
bulge_position = 0.5,
complementarity = 100,
target_structure = "",
cutoff = 3,
out_file = "targets.csv"){
print("Starting search")
maxer <- 1
miner <- 1
if (!"pe_slope" %in% names(df)){
cat("Running PE slope calculations...\n")
df <- pe_slope(df)
}
if (target_structure != ""){
df <- df[df$Structure == target_structure,]
}
if (nrow(df) < 1){
cat("No sequences with given structure. Aborting search.\n")
} else {
cat("Running initial search...\n")
interim <- df[df$APE == target_ape &
df$pe_slope == target_PEslope &
df$GC == target_GC &
df$Bulge == bulge &
df$BulgeSize == bulge_size &
df$Complementarity == complementarity,]
if (nrow(interim) < 1){
cat("Initial run did not find a sequence. Relaxing search parameters...")
enough <- FALSE
} else {
if_enough <- readline(prompt = paste0("Found ", nrow(interim), " sequences with desired targets. Is this enough (Y/n)?"))
if (if_enough != "n"){
enough <- TRUE
} else{
enough <- FALSE
}
}
# Iterates through target parameter relaxation until hits are found
while (nrow(interim) < 1 | enough == FALSE){
maxer <- maxer+shifter
miner <- miner-shifter
interim <- df[df$APE < target_ape*maxer & df$APE > target_ape*miner &
df$pe_slope < target_PEslope*maxer & df$pe_slope > target_PEslope*miner &
df$GC < target_GC*maxer & df$GC > target_GC*miner &
df$Bulge == bulge &
df$BulgeSize < bulge_size*maxer & df$BulgeSize > bulge_size*miner &
df$Complementarity < complementarity*maxer & df$Complementarity > complementarity*miner,]
# Confirms there are enough target sequences
if (nrow(interim) > 0){
if_enough <- readline(prompt = paste0("Found ", nrow(interim), " sequences with parameters within ", (maxer-1)*100,"% of targets. Is this enough (Y/n)?"))
if (if_enough != "n"){
enough <- TRUE
}
} else if (maxer >= cutoff){
cat("Relaxation of parameters has surpassed cutoff threshold. Aborting search.\n")
break
}
}
if (enough | nrow(interim) > 0){
cat(paste0("Found ", nrow(interim), " sequences within ", (maxer-1)*100, "% of the target parameters.\n"))
write_csv(interim, out_file)
} else {
cat("Unable to find matching sequences. Run more iterations and try again.\n")
print(maxer)
}
}
}
find_a_hairpin(datum)
datum <- read_csv("targets.csv")
ggplot(data = datum, aes(x = dG_length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
theme_bw()
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
theme_bw()
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
lims(x = c(-1,0))+
theme_bw()
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
lims(x = c(-1.2,0))+
theme_bw()
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
datum <- read_csv("Downloads/HP_1_permutations_sorted_top100.csv")
the_file <- ""
seq_num <- 1
for (i in unique(datum$sequence)){
the_file<- paste0(the_file, ">Sequence_", seq_num,"\n",i,"\n")
seq_num=seq_num+1
}
cat(the_file, file = "BD.fasta")
datum <- read_csv("Documents/Github/Simon_lab/hairpin_analysis/data.csv")
datum <- pe_slope(datum)
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
datum <- read_csv("Documents/Github/Simon_lab/hairpin_analysis/data.csv")
the_file <- ""
View(datum)
the_file <- ""
for (i in unique(datum$Name)){
the_file<- paste0(the_file, ">", i,"\n",datum[datum$Name,]$Structure, "\n")
}
the_file <- ""
for (i in unique(datum$Name)){
the_file<- paste0(the_file, ">", i,"\n",datum[datum$Name == i,]$Structure, "\n")
}
datum <- read_csv("Downloads/HP_1_permutations_sorted_top100.csv")
the_file <- ""
seq_num <- 1
for (i in unique(datum$sequence)){
the_file<- paste0(the_file, ">Sequence_", seq_num,"\n",i,"\n")
seq_num=seq_num+1
}
cat(the_file, file = "BD.fasta")
datum <- read_csv("Documents/Github/Simon_lab/hairpin_analysis/data.csv")
the_file <- ""
for (i in unique(datum$Name)){
the_file<- paste0(the_file, ">", i,"\n",datum[datum$Name == i,]$Structure, "\n")
}
cat(the_file, file = "Documents/Github/Simon_lab/strucs.fasta")
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
datum <- read_csv("Documents/Github/Simon_lab/hairpin_analysis/data.csv")
datum <- pe_slope(datum)
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
datum$close <- "N"
head(datum)
datum[datum$Name == ">Sequence_6" | datum$Name == ">CY1" |
datum$Name == ">Sequence_23" | datum$Name == ">Sequence_27" |
datum$Name == ">Sequence_33",]$close <- "Y"
ggsave("graph.png", dpi = 300)
ggplot(data = datum, aes(x = dG_Length, y = APE, color = close))+
geom_point(size = 5)+
#scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
View(datum)
datum[datum$Name == ">Sequence_6" | datum$Name == ">CY1_WT" |
datum$Name == ">Sequence_23" | datum$Name == ">Sequence_27" |
datum$Name == ">Sequence_33",]$close <- "Y"
ggsave("graph.png", dpi = 300)
ggplot(data = datum, aes(x = dG_Length, y = APE, color = pe_slope))+
geom_point(size = 5)+
scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
datum$close <- "N"
datum[datum$Name == ">Sequence_6" | datum$Name == ">CY1_WT" |
datum$Name == ">Sequence_23" | datum$Name == ">Sequence_27" |
datum$Name == ">Sequence_33",]$close <- "Y"
ggsave("graph.png", dpi = 300)
ggplot(data = datum, aes(x = dG_Length, y = APE, color = close))+
geom_point(size = 5)+
#scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
datum[datum$Name == ">Sequence_6" | datum$Name == ">CY_WT" |
datum$Name == ">Sequence_23" | datum$Name == ">Sequence_27" |
datum$Name == ">Sequence_33",]$close <- "Y"
ggplot(data = datum, aes(x = dG_Length, y = APE, color = close))+
geom_point(size = 5)+
#scale_color_viridis_b()+
lims(x = c(-1.2,0),
y = c(0,2))+
theme_bw()
ggsave("closest.png", dpi = 300)
q()
library(ggpubr)
library(tidyverse)
datum <- read_csv("Documents/smithy/cy1_hp/data.csv")
datum[datum$Name== "CY_WT",]
unique(datum$Name)
datum[datum$Name== "CY1",]
datum[datum$Name== ">CY1",]
mean(datum[datum$Name != ">CY1",]$GC)
median(datum[datum$Name != ">CY1",]$GC)
median(datum[datum$Name != ">CY1",]$BP)
median(datum[datum$Name != ">CY1",]$bp)
mean(datum[datum$Name != ">CY1",]$bp)
sd(datum[datum$Name != ">CY1",]$bp)
datum[datum$Name != ">Sequence_6",]$bp
datum[datum$Name == ">Sequence_6",]$bp
datum[datum$Name == ">Sequence_23",]$bp
datum[datum$Name == ">Sequence_33",]$bp
datum[datum$Name == ">Sequence_27",]$bp
q()
setwd("Documents/Github/Simon_lab/hairpin_analysis/")
source("~/Documents/Github/Simon_lab/hairpin_analysis/bin/pe_slope.R")
datum <- read_csv("data_none.csv")
draft <- ggplot(data = datum, aes(x = dG, y = Length, color = GC_pair_percent))+
geom_point(size = 5, alpha = 0.5)+
theme_bw()
draft
draft <- ggplot(data = datum, aes(y = dG, x = Length, color = GC_pair_percent))+
geom_point(size = 5, alpha = 0.5)+
theme_bw()
draft
draft <- ggplot(data = datum, aes(y = dG, x = Length, color = GC_pair_percent))+
geom_point(size = 5, alpha = 0.5)+
facet_wrap(~Complementarity)+
theme_bw()
draft
draft <- ggplot(data = datum, aes(y = dG, x = Length, color = GC_pair_percent))+
geom_point(size = 5, alpha = 0.5)+
facet_wrap(~Complementarity)+
scale_color_viridis_b()+
theme_bw()
draft
draft <- ggplot(data = datum, aes(y = dG, x = Length, color = GC_pair_percent))+
geom_point(size = 5, alpha = 0.5)+
facet_wrap(~Complementarity)+
scale_color_viridis_c()+
theme_bw()
draft
draft <- ggplot(data = datum, aes(y = dG, x = Length, color = AU_pair_percent))+
geom_point(size = 5, alpha = 0.5)+
facet_wrap(~Complementarity)+
scale_color_viridis_c()+
theme_bw()
draft
draft <- ggplot(data = datum, aes(y = dG, x = Length, color = GU_pair_percent))+
geom_point(size = 5, alpha = 0.5)+
facet_wrap(~Complementarity)+
scale_color_viridis_c()+
theme_bw()
draft
draft <- ggplot(data = datum, aes(y = dG_Length, x = APE, color = GU_pair_percent))+
geom_point(size = 5, alpha = 0.5)+
facet_wrap(~Complementarity)+
scale_color_viridis_c()+
theme_bw()
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = GU_pair_percent))+
geom_point(size = 5, alpha = 0.5)+
facet_wrap(~Complementarity)+
scale_color_viridis_c()+
theme_bw()
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = Gc_pair_percent))+
geom_point(size = 5, alpha = 0.5)+
facet_wrap(~Complementarity)+
scale_color_viridis_c()+
theme_bw()
draft <- ggplot(data = datum, aes(x = dG_Length, y = APE, color = GC_pair_percent))+
geom_point(size = 5, alpha = 0.5)+
facet_wrap(~Complementarity)+
scale_color_viridis_c()+
theme_bw()
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = log(APE), color = GC_pair_percent))+
geom_point(size = 5, alpha = 0.5)+
facet_wrap(~Complementarity)+
scale_color_viridis_c()+
theme_bw()
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = log(APE), color = GC_pair_percent))+
geom_point(size = 5, alpha = 0.5)+
facet_wrap(~Complementarity)+
scale_color_viridis_b()+
theme_bw()
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = log(APE), color = GC_pair_percent))+
geom_point(size = 5, alpha = 0.5)+
#  facet_wrap(~Complementarity)+
scale_color_viridis_b()+
theme_bw()
draft
x <- lm(log(APE)~dG_Length, data = datum[datum$Complementarity > 50,])
summary(x)
x <- lm(log(APE)~dG_Length, data = datum)
summary(x)
sqrt(0.8258)
x <- lm(log(APE)~dG_Length*GC_pairs_percent, data = datum)
summary(x)
x <- lm(log(APE)~dG_Length*GC_pair_percent, data = datum)
summary(x)
x <- lm(log(APE)~dG_Length*GC_pair_percent, data = datum[datum$Complementarity > 50,])
summary(x)
x <- lm(log(APE)~dG_Length*GC, data = datum)
summary(x)
sqrt(0.8448)
x <- lm(log(APE)~dG_Length*GC_pair_percent*AU_pair_percent, data = datum)
summary(x)
sqrt(0.8694)
x <- lm(log(APE)~dG_Length*AU_pair_percent, data = datum)
summary(x)
x <- lm(log(APE)~dG_Length*GU_pair_percent, data = datum)
summary(x)
x <- lm(log(APE)~dG_Length*AU_pair_percent*GU_pair_percent, data = datum)
summary(x)
sqrt(0.8676)
datum <- pe_slope(datum)
datum$bp_percent <- 2*datum$bp/datum$Length
x <- lm(log(APE)~dG_Length*AU_pair_percent*, data = datum)
summary(x)
x <- lm(log(APE)~dG_Length*AU_pair_percent, data = datum)
summary(x)
draft <- ggplot(data = datum, aes(x = dG_Length, y = log(APE), color = GC_pair_percent))+
geom_point(size = 5, alpha = 0.5)+
#  facet_wrap(~Complementarity)+
scale_color_viridis_b()+
theme_bw()
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = log(APE), color = bp_percent))+
geom_point(size = 5, alpha = 0.5)+
#  facet_wrap(~Complementarity)+
scale_color_viridis_b()+
theme_bw()
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = log(APE), color = bp_percent))+
geom_point(size = 5, alpha = 0.5)+
#  facet_wrap(~Complementarity)+
scale_color_viridis_c()+
theme_bw()
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = log(APE), color = pe_slope))+
geom_point(size = 5, alpha = 0.5)+
#  facet_wrap(~Complementarity)+
scale_color_viridis_c()+
theme_bw()
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = log(APE), color = apical_pe_slope))+
geom_point(size = 5, alpha = 0.5)+
#  facet_wrap(~Complementarity)+
scale_color_viridis_c()+
theme_bw()
draft
draft <- ggplot(data = datum, aes(x = dG_Length, y = log(APE), color = basal_pe_slope))+
geom_point(size = 5, alpha = 0.5)+
#  facet_wrap(~Complementarity)+
scale_color_viridis_c()+
theme_bw()
draft
x <- lm(log(APE)~dG_Length*AU_pair_percent*bp_percent, data = datum)
summary(x)
x <- lm(log(APE)~dG_Length*GC_pair_percent*bp_percent, data = datum)
summary(x)
x <- lm(log(APE)~dG_Length*GU_pair_percent*bp_percent, data = datum)
summary(x)
x <- lm(log(APE)~dG_Length*AU_pair_percent*bp_percent, data = datum)
summary(x)
sqrt(0.874)
x <- lm(log(APE)~dG_Length*AU_pair_percent*bp_percent*GC, data = datum)
summary(x)
x <- lm(log(APE)~dG_Length*bp_percent*GC, data = datum)
summary(x)
x <- lm(log(APE)~dG_Length*AU_pair_percent*GC, data = datum)
summary(x)
x <- lm(log(APE)~dG_Length*AU_pair_percent*bp_percent*GC, data = datum)
summary(x)
q()
